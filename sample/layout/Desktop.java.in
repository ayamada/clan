package @PROJECT_DESKTOP_GROUPID@;
/*
@AC_MSG_1@
@AC_MSG_2@
@AC_MSG_3@
@AC_MSG_4@
@AC_MSG_5@
@AC_MSG_6@

@AC_MSG_TMPL_1@
@AC_MSG_TMPL_2@
*/

import java.util.concurrent.Callable;
import jp.ne.tir.clan.BootLoader;
import jp.ne.tir.clan.Config;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.backends.lwjgl.LwjglApplication;
import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;
import com.badlogic.gdx.Files.FileType;

import clojure.lang.RT;
import clojure.lang.Symbol;

public class Desktop {
	public static void main(String[] args) {
		Config clanConf = new Config();
		clanConf.logoPath = "assets/cbl_logo.png";
		//clanConf.fontPath = "assets/cbl_font.fnt";
		clanConf.jinglePath = "assets/cbl_jingle.ogg";
		clanConf.isDisplayLog = true;
		clanConf.cljInit = null;
		clanConf.nekoInit = null;
		clanConf.spawner = new Callable<ApplicationListener>() {
			// NB: it must can to run another threads.
			@Override public ApplicationListener call() throws Exception {
				//return new @PROJECT_CAL_GENERATOR_CLASS@();
				try {
					//return (ApplicationListener)Class.forName("@PROJECT_CAL_GENERATOR_CLASS@").newInstance();
					RT.var("clojure.core", "refer").invoke(Symbol.intern(null, "clojure.core"));
					RT.var("clojure.core", "require").invoke(Symbol.intern("jp.ne.tir.clan.clanutil"));
					return (ApplicationListener)RT.var("jp.ne.tir.clan.clanutil", "generate-cal").invoke("@PROJECT_CAL_GENERATOR_CLASS@", "@PROJECT_CAL_GENERATOR_FN@");
				} catch (Throwable e) {
					//e.printStackTrace();
					throw new Exception(e);
				}
			}
		};

		LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
		config.title = "@PROJECT_NAME@";
		//config.useGL20 = Config.useGL20;
		config.useGL20 = false;
		config.forceExit = false;
		//config.width = 480;
		//config.height = 320;
		config.addIcon("assets/process_icon/128x128.png", FileType.Internal);
		config.addIcon("assets/process_icon/32x32.png", FileType.Internal);
		config.addIcon("assets/process_icon/16x16.png", FileType.Internal);
		// it is for disable boot-screen.
		//new LwjglApplication(new @PROJECT_CAL_GENERATOR_CLASS@(), config);
		new LwjglApplication(new BootLoader(clanConf), config);
	}
}
