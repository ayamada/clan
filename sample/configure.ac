AC_PREREQ(2.54)

dnl ----------------------------------------------------------------
dnl Defines

dnl artifactId, version
AC_INIT(drop, 1.0.5-SNAPSHOT)

dnl application-name(for human reading)(can use multibyte character)
PROJECT_NAME="space drop"
AC_SUBST(PROJECT_NAME)

dnl application-name(for icon)(can use multibyte character)
PROJECT_SHORT_NAME=${PROJECT_NAME}
AC_SUBST(PROJECT_SHORT_NAME)

dnl groupId
PROJECT_GROUPID="jp.ne.tir.drop.android"
AC_SUBST(PROJECT_GROUPID)

dnl android version-code(for google play)
PROJECT_ANDROID_VERSIONCODE=6
AC_SUBST(PROJECT_ANDROID_VERSIONCODE)
dnl TODO: I want to automatically increment this, but I have no good idea

dnl class of ApplicationListener by clojure
PROJECT_CAL_GENERATOR_CLASS=drop.main
AC_SUBST(PROJECT_CAL_GENERATOR_CLASS)
dnl generator of ApplicationListener by clojure
PROJECT_CAL_GENERATOR_FN=generate-al
AC_SUBST(PROJECT_CAL_GENERATOR_FN)
dnl CLAN do `(~PROJECT_CAL_GENERATOR_CLASS/~PROJECT_CAL_GENERATOR_FN).
dnl (Above is quasi-code)
dnl Therefore you must provide a fn,
dnl that fn must return an instance of ApplicationListener,
dnl such a (proxy [ApplicationListener] [] ...)).


dnl ----------------------------------------------------------------
dnl Aliases
PROJECT_ARTIFACTID=${PACKAGE_NAME}
AC_SUBST(PROJECT_ARTIFACTID)
PROJECT_VERSION=${PACKAGE_VERSION}
AC_SUBST(PROJECT_VERSION)

dnl もし必要なら以下を変更してもよい
PROJECT_DESKTOP_GROUPID=${PROJECT_GROUPID}
AC_SUBST(PROJECT_DESKTOP_GROUPID)
PROJECT_ANDROID_GROUPID=${PROJECT_GROUPID}
AC_SUBST(PROJECT_ANDROID_GROUPID)


dnl ----------------------------------------------------------------
dnl clan information
source clan/script/settings.sh
AC_SUBST(CLAN_GROUPID)
AC_SUBST(CLAN_ARTIFACTID)
AC_SUBST(CLAN_VERSION)
AC_SUBST(CLAN_NAME)
AC_SUBST(CLAN_CLOJURE_VERSION)
AC_SUBST(CLAN_CLOJURE_VERSION_ANDROID_SUFFIX)
AC_SUBST(CLAN_LIBGDX_VERSION)
AC_SUBST(CLAN_ANDROID_VERSION)
AC_SUBST(CLAN_NEKO_VERSION)


dnl ----------------------------------------------------------------
dnl auto-generated message
AC_MSG_1="This file is automatically generated *.in file."
AC_MSG_2="Do not modify this file - YOUR CHANGES WILL BE ERASED!"
AC_MSG_3="You can edit *.in file and 'autoconf && ./configure'"
AC_MSG_4="このファイルは *.in ファイルから自動生成されました。"
AC_MSG_5="このファイルは変更しないで下さい。"
AC_MSG_6="代わりに *.in を変更し、 'autoconf && ./configure' して下さい。"
AC_SUBST(AC_MSG_1)
AC_SUBST(AC_MSG_2)
AC_SUBST(AC_MSG_3)
AC_SUBST(AC_MSG_4)
AC_SUBST(AC_MSG_5)
AC_SUBST(AC_MSG_6)

AC_MSG_TMPL_1="this file was came from layout/ ."
AC_MSG_TMPL_2="このファイルのオリジナルは layout/ 配下にあります。"
AC_SUBST(AC_MSG_TMPL_1)
AC_SUBST(AC_MSG_TMPL_2)


dnl ----------------------------------------------------------------
dnl Checks
AC_PATH_PROG([JAVA_PATH], [java])
AS_IF(test x"$JAVA_PATH" = x, AC_MSG_ERROR([java not found]))
AC_PATH_PROG([JAVAC_PATH], [javac])
AS_IF(test x"$JAVAC_PATH" = x, AC_MSG_ERROR([javac not found]))
dnl AC_PATH_PROG([JAR_PATH], [jar])
dnl AS_IF(test x"$JAR_PATH" = x, AC_MSG_ERROR([jar not found]))
AC_PATH_PROGS([LEIN_PATH], [lein2 lein])
AS_IF(test x"$LEIN_PATH" = x, AC_MSG_ERROR([lein not found]))
dnl AC_PATH_PROG([MVN_PATH], [mvn])
dnl AS_IF(test x"$MVN_PATH" = x, AC_MSG_ERROR([mvn not found]))
AC_PATH_PROG([HAS_ANDROID_SDK], [zipalign])
AC_PATH_PROG([ADB_PATH], [adb])
dnl AS_IF(test x"$ADB_PATH" = x, AC_MSG_ERROR([adb not found]))
AC_PATH_PROG([WGET_PATH], [wget])
AS_IF(test x"$WGET_PATH" = x, AC_MSG_ERROR([wget not found]))
AC_PATH_PROG([UNZIP_PATH], [unzip])
AS_IF(test x"$UNZIP_PATH" = x, AC_MSG_ERROR([unzip not found]))
AC_PATH_PROG([PERL_PATH], [perl])
AS_IF(test x"$PERL_PATH" = x, AC_MSG_ERROR([perl not found]))
dnl AC_PATH_PROG([EXEWRAP_PATH], [exewrap])
AC_PATH_PROGS([L4J_PATH], [launch4jc launch4j])
dnl AS_IF(test x"$L4J_PATH" = x, AC_MSG_ERROR([launch4j not found]))


dnl ----------------------------------------------------------------
dnl for project-common.clj.in
dnl    /d/prog/Android/android-sdk/platform-tools/adb
dnl => d:/prog/Android/android-sdk
dnl TODO: ドライブ名置換はwindowsの時のみ行うようにしたい
dnl TODO: canonical-path的な物を使って正規化したいところ
ANDROID_SDK_PATH=`echo ${ADB_PATH} | ${PERL_PATH} -pe '$_ =~ s#^/([A-Za-z])/#$1:/#; $_ =~ s#/platform-tools/adb.*$##'`
AC_SUBST(ANDROID_SDK_PATH)


dnl ----------------------------------------------------------------
dnl for claninfo.clj.in
BUILD_ENV=`uname -a`
AC_SUBST(BUILD_ENV)
BUILD_JAVAC=`javac -version 2>&1`
AC_SUBST(BUILD_JAVAC)


dnl ----------------------------------------------------------------
dnl Outputs

dnl 自動生成ファイルの一覧を作成する
IN_TARGET_DIRS="clan/cbl clan/depinst clan/tpack layout desktop android src src-java project-common.clj.in l4j"
IN_TARGET_DIRS_EXCLUDE="desktop/assets"
IN_FILES=`find ${IN_TARGET_DIRS} | grep '\.in$' | grep -v ${IN_TARGET_DIRS_EXCLUDE} | ${PERL_PATH} -ne 'chomp $_ && ($_ =~ s|^(.*)\.in$|$1|) && print "$_ "' && echo Makefile`
AC_GENERATED_FILES="autom4te.cache configure VERSION $IN_FILES"
AC_SUBST(AC_GENERATED_FILES)

dnl 最後に、ここまでで定義した内容を使って、ファイルを処理する
echo $PROJECT_VERSION > VERSION
AC_OUTPUT($IN_FILES)



