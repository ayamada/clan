;; @AC_MSG_1@
;; @AC_MSG_2@
;; @AC_MSG_3@
;; @AC_MSG_4@
;; @AC_MSG_5@
;; @AC_MSG_6@

;; see https://github.com/technomancy/leiningen/blob/master/sample.project.clj

(load-file "../project-common.clj")

(def dependencies
  `[~@dependencies-common
    [com.badlogic.gdx/gdx-natives "@CLAN_LIBGDX_VERSION@"]
    [com.badlogic.gdx/gdx-backend-lwjgl "@CLAN_LIBGDX_VERSION@"]
    [com.badlogic.gdx/gdx-backend-lwjgl-natives "@CLAN_LIBGDX_VERSION@"]
    ;[org.jclouds/jclouds "1.0" :scope "provided"]
    ])

(defproject
  @PROJECT_ARTIFACTID@ "@PROJECT_VERSION@"
  ;:description "FIXME: write description"
  ;:url "http://example.com/FIXME"
  ;:license {:name "Eclipse Public License"
  ;          :url "http://www.eclipse.org/legal/epl-v10.html"}
  :dependencies ~dependencies
  :profiles {
             :repl {
                    }
             :dev {
                   }
             :packaged {
                        }
             :release {:global-vars {*warn-on-reflection* false
                                     *assert* false}
                       :omit-source true
                       :aot :all
                       ;; > Put a regex here to compile all namespaces whose names match.
                       ;:jar-name "sample.jar"
                       ;:uberjar-name "sample-standalone.jar"
                       ;:jar-exclusions [#"(?:^|/).svn/"]
                       ;:uberjar-exclusions [#"META-INF/DUMMY.SF"]
                       }
             }
  ;; TODO: あとできちんと必要なものを全て指定する事
  :aot [jp.ne.tir.clan.clanutil]
  :main @PROJECT_DESKTOP_GROUPID@.Desktop

  :source-paths ["src" "../src" "../clan/cbl/src"]
  :java-source-paths ["src-java" "../src-java" "../clan/cbl/src-java"]
  :test-paths ["../test"]
  :resource-paths ["target/resources"]

  :compile-path "target/classes" ; For .class files.
  :target-path "target/" ; Where to place the project's jar file.
  ;:native-path "src/native" ; Where to extract native dependencies.
  :global-vars {*warn-on-reflection* true
                *assert* true}
  )
